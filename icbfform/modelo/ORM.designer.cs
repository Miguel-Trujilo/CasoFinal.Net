#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace icbfform.modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ICBF")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertdescripcionNiño(descripcionNiño instance);
    partial void UpdatedescripcionNiño(descripcionNiño instance);
    partial void DeletedescripcionNiño(descripcionNiño instance);
    partial void Insertusuarios(usuarios instance);
    partial void Updateusuarios(usuarios instance);
    partial void Deleteusuarios(usuarios instance);
    partial void InsertEPS(EPS instance);
    partial void UpdateEPS(EPS instance);
    partial void DeleteEPS(EPS instance);
    partial void InsertestadoJardin(estadoJardin instance);
    partial void UpdateestadoJardin(estadoJardin instance);
    partial void DeleteestadoJardin(estadoJardin instance);
    partial void Insertgrados(grados instance);
    partial void Updategrados(grados instance);
    partial void Deletegrados(grados instance);
    partial void InsertJardines(Jardines instance);
    partial void UpdateJardines(Jardines instance);
    partial void DeleteJardines(Jardines instance);
    partial void InsertmadresComuniarias(madresComuniarias instance);
    partial void UpdatemadresComuniarias(madresComuniarias instance);
    partial void DeletemadresComuniarias(madresComuniarias instance);
    partial void Insertniños(niños instance);
    partial void Updateniños(niños instance);
    partial void Deleteniños(niños instance);
    partial void InsertregistroAsistencia(registroAsistencia instance);
    partial void UpdateregistroAsistencia(registroAsistencia instance);
    partial void DeleteregistroAsistencia(registroAsistencia instance);
    partial void InsertregistroAvance(registroAvance instance);
    partial void UpdateregistroAvance(registroAvance instance);
    partial void DeleteregistroAvance(registroAvance instance);
    partial void Insertrol(rol instance);
    partial void Updaterol(rol instance);
    partial void Deleterol(rol instance);
    partial void InserttipoSangre(tipoSangre instance);
    partial void UpdatetipoSangre(tipoSangre instance);
    partial void DeletetipoSangre(tipoSangre instance);
    #endregion
		
		public ORMDataContext() : 
				base(global::icbfform.Properties.Settings.Default.ICBFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<descripcionNiño> descripcionNiño
		{
			get
			{
				return this.GetTable<descripcionNiño>();
			}
		}
		
		public System.Data.Linq.Table<usuarios> usuarios
		{
			get
			{
				return this.GetTable<usuarios>();
			}
		}
		
		public System.Data.Linq.Table<EPS> EPS
		{
			get
			{
				return this.GetTable<EPS>();
			}
		}
		
		public System.Data.Linq.Table<estadoJardin> estadoJardin
		{
			get
			{
				return this.GetTable<estadoJardin>();
			}
		}
		
		public System.Data.Linq.Table<grados> grados
		{
			get
			{
				return this.GetTable<grados>();
			}
		}
		
		public System.Data.Linq.Table<Jardines> Jardines
		{
			get
			{
				return this.GetTable<Jardines>();
			}
		}
		
		public System.Data.Linq.Table<madresComuniarias> madresComuniarias
		{
			get
			{
				return this.GetTable<madresComuniarias>();
			}
		}
		
		public System.Data.Linq.Table<niños> niños
		{
			get
			{
				return this.GetTable<niños>();
			}
		}
		
		public System.Data.Linq.Table<registroAsistencia> registroAsistencia
		{
			get
			{
				return this.GetTable<registroAsistencia>();
			}
		}
		
		public System.Data.Linq.Table<registroAvance> registroAvance
		{
			get
			{
				return this.GetTable<registroAvance>();
			}
		}
		
		public System.Data.Linq.Table<rol> rol
		{
			get
			{
				return this.GetTable<rol>();
			}
		}
		
		public System.Data.Linq.Table<tipoSangre> tipoSangre
		{
			get
			{
				return this.GetTable<tipoSangre>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.descripcionNiño")]
	public partial class descripcionNiño : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_descripcion;
		
		private string _descripcion;
		
		private EntitySet<registroAsistencia> _registroAsistencia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_descripcionChanging(int value);
    partial void Onid_descripcionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public descripcionNiño()
		{
			this._registroAsistencia = new EntitySet<registroAsistencia>(new Action<registroAsistencia>(this.attach_registroAsistencia), new Action<registroAsistencia>(this.detach_registroAsistencia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_descripcion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_descripcion
		{
			get
			{
				return this._id_descripcion;
			}
			set
			{
				if ((this._id_descripcion != value))
				{
					this.Onid_descripcionChanging(value);
					this.SendPropertyChanging();
					this._id_descripcion = value;
					this.SendPropertyChanged("id_descripcion");
					this.Onid_descripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="descripcionNiño_registroAsistencia", Storage="_registroAsistencia", ThisKey="id_descripcion", OtherKey="id_descripcion")]
		public EntitySet<registroAsistencia> registroAsistencia
		{
			get
			{
				return this._registroAsistencia;
			}
			set
			{
				this._registroAsistencia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registroAsistencia(registroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.descripcionNiño = this;
		}
		
		private void detach_registroAsistencia(registroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.descripcionNiño = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_usuario;
		
		private string _nombre;
		
		private int _telefono;
		
		private string _direccion;
		
		private string _correo;
		
		private string _clave;
		
		private int _id_rol;
		
		private EntitySet<niños> _niños;
		
		private EntityRef<rol> _rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    #endregion
		
		public usuarios()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			this._rol = default(EntityRef<rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuarios_niños", Storage="_niños", ThisKey="id_usuario", OtherKey="id_acudiente")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rol_usuarios", Storage="_rol", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public rol rol
		{
			get
			{
				return this._rol.Entity;
			}
			set
			{
				rol previousValue = this._rol.Entity;
				if (((previousValue != value) 
							|| (this._rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rol.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._rol.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(int);
					}
					this.SendPropertyChanged("rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.usuarios = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EPS")]
	public partial class EPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_eps;
		
		private string _nombre;
		
		private string _telefono;
		
		private EntitySet<niños> _niños;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_epsChanging(int value);
    partial void Onid_epsChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public EPS()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_eps", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_eps
		{
			get
			{
				return this._id_eps;
			}
			set
			{
				if ((this._id_eps != value))
				{
					this.Onid_epsChanging(value);
					this.SendPropertyChanging();
					this._id_eps = value;
					this.SendPropertyChanged("id_eps");
					this.Onid_epsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPS_niños", Storage="_niños", ThisKey="id_eps", OtherKey="id_eps")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.EPS = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.EPS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estadoJardin")]
	public partial class estadoJardin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_estado;
		
		private string _estado;
		
		private EntitySet<Jardines> _Jardines;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public estadoJardin()
		{
			this._Jardines = new EntitySet<Jardines>(new Action<Jardines>(this.attach_Jardines), new Action<Jardines>(this.detach_Jardines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estadoJardin_Jardines", Storage="_Jardines", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<Jardines> Jardines
		{
			get
			{
				return this._Jardines;
			}
			set
			{
				this._Jardines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jardines(Jardines entity)
		{
			this.SendPropertyChanging();
			entity.estadoJardin = this;
		}
		
		private void detach_Jardines(Jardines entity)
		{
			this.SendPropertyChanging();
			entity.estadoJardin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grados")]
	public partial class grados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_grado;
		
		private string _grado;
		
		private EntitySet<registroAvance> _registroAvance;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_gradoChanging(int value);
    partial void Onid_gradoChanged();
    partial void OngradoChanging(string value);
    partial void OngradoChanged();
    #endregion
		
		public grados()
		{
			this._registroAvance = new EntitySet<registroAvance>(new Action<registroAvance>(this.attach_registroAvance), new Action<registroAvance>(this.detach_registroAvance));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_grado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_grado
		{
			get
			{
				return this._id_grado;
			}
			set
			{
				if ((this._id_grado != value))
				{
					this.Onid_gradoChanging(value);
					this.SendPropertyChanging();
					this._id_grado = value;
					this.SendPropertyChanged("id_grado");
					this.Onid_gradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grado", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string grado
		{
			get
			{
				return this._grado;
			}
			set
			{
				if ((this._grado != value))
				{
					this.OngradoChanging(value);
					this.SendPropertyChanging();
					this._grado = value;
					this.SendPropertyChanged("grado");
					this.OngradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grados_registroAvance", Storage="_registroAvance", ThisKey="id_grado", OtherKey="id_grado")]
		public EntitySet<registroAvance> registroAvance
		{
			get
			{
				return this._registroAvance;
			}
			set
			{
				this._registroAvance.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registroAvance(registroAvance entity)
		{
			this.SendPropertyChanging();
			entity.grados = this;
		}
		
		private void detach_registroAvance(registroAvance entity)
		{
			this.SendPropertyChanging();
			entity.grados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jardines")]
	public partial class Jardines : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_jardin;
		
		private string _nombre;
		
		private string _direccion;
		
		private int _id_estado;
		
		private EntitySet<madresComuniarias> _madresComuniarias;
		
		private EntitySet<niños> _niños;
		
		private EntityRef<estadoJardin> _estadoJardin;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_jardinChanging(int value);
    partial void Onid_jardinChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    #endregion
		
		public Jardines()
		{
			this._madresComuniarias = new EntitySet<madresComuniarias>(new Action<madresComuniarias>(this.attach_madresComuniarias), new Action<madresComuniarias>(this.detach_madresComuniarias));
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			this._estadoJardin = default(EntityRef<estadoJardin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jardin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_jardin
		{
			get
			{
				return this._id_jardin;
			}
			set
			{
				if ((this._id_jardin != value))
				{
					this.Onid_jardinChanging(value);
					this.SendPropertyChanging();
					this._id_jardin = value;
					this.SendPropertyChanged("id_jardin");
					this.Onid_jardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estadoJardin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardines_madresComuniarias", Storage="_madresComuniarias", ThisKey="id_jardin", OtherKey="id_jardin")]
		public EntitySet<madresComuniarias> madresComuniarias
		{
			get
			{
				return this._madresComuniarias;
			}
			set
			{
				this._madresComuniarias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardines_niños", Storage="_niños", ThisKey="id_jardin", OtherKey="id_jardin")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estadoJardin_Jardines", Storage="_estadoJardin", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estadoJardin estadoJardin
		{
			get
			{
				return this._estadoJardin.Entity;
			}
			set
			{
				estadoJardin previousValue = this._estadoJardin.Entity;
				if (((previousValue != value) 
							|| (this._estadoJardin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estadoJardin.Entity = null;
						previousValue.Jardines.Remove(this);
					}
					this._estadoJardin.Entity = value;
					if ((value != null))
					{
						value.Jardines.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estadoJardin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_madresComuniarias(madresComuniarias entity)
		{
			this.SendPropertyChanging();
			entity.Jardines = this;
		}
		
		private void detach_madresComuniarias(madresComuniarias entity)
		{
			this.SendPropertyChanging();
			entity.Jardines = null;
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.Jardines = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.Jardines = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.madresComuniarias")]
	public partial class madresComuniarias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_madre;
		
		private string _nombre;
		
		private string _direccion;
		
		private int _telefono;
		
		private System.DateTime _fecha_nacimiento;
		
		private string _clave;
		
		private int _id_jardin;
		
		private EntitySet<registroAsistencia> _registroAsistencia;
		
		private EntitySet<registroAvance> _registroAvance;
		
		private EntityRef<Jardines> _Jardines;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_madreChanging(int value);
    partial void Onid_madreChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    partial void Onfecha_nacimientoChanging(System.DateTime value);
    partial void Onfecha_nacimientoChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    partial void Onid_jardinChanging(int value);
    partial void Onid_jardinChanged();
    #endregion
		
		public madresComuniarias()
		{
			this._registroAsistencia = new EntitySet<registroAsistencia>(new Action<registroAsistencia>(this.attach_registroAsistencia), new Action<registroAsistencia>(this.detach_registroAsistencia));
			this._registroAvance = new EntitySet<registroAvance>(new Action<registroAvance>(this.attach_registroAvance), new Action<registroAvance>(this.detach_registroAvance));
			this._Jardines = default(EntityRef<Jardines>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_madre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_madre
		{
			get
			{
				return this._id_madre;
			}
			set
			{
				if ((this._id_madre != value))
				{
					this.Onid_madreChanging(value);
					this.SendPropertyChanging();
					this._id_madre = value;
					this.SendPropertyChanged("id_madre");
					this.Onid_madreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_nacimiento", DbType="Date NOT NULL")]
		public System.DateTime fecha_nacimiento
		{
			get
			{
				return this._fecha_nacimiento;
			}
			set
			{
				if ((this._fecha_nacimiento != value))
				{
					this.Onfecha_nacimientoChanging(value);
					this.SendPropertyChanging();
					this._fecha_nacimiento = value;
					this.SendPropertyChanged("fecha_nacimiento");
					this.Onfecha_nacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jardin", DbType="Int NOT NULL")]
		public int id_jardin
		{
			get
			{
				return this._id_jardin;
			}
			set
			{
				if ((this._id_jardin != value))
				{
					if (this._Jardines.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_jardinChanging(value);
					this.SendPropertyChanging();
					this._id_jardin = value;
					this.SendPropertyChanged("id_jardin");
					this.Onid_jardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="madresComuniarias_registroAsistencia", Storage="_registroAsistencia", ThisKey="id_madre", OtherKey="id_madre")]
		public EntitySet<registroAsistencia> registroAsistencia
		{
			get
			{
				return this._registroAsistencia;
			}
			set
			{
				this._registroAsistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="madresComuniarias_registroAvance", Storage="_registroAvance", ThisKey="id_madre", OtherKey="id_madre")]
		public EntitySet<registroAvance> registroAvance
		{
			get
			{
				return this._registroAvance;
			}
			set
			{
				this._registroAvance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardines_madresComuniarias", Storage="_Jardines", ThisKey="id_jardin", OtherKey="id_jardin", IsForeignKey=true)]
		public Jardines Jardines
		{
			get
			{
				return this._Jardines.Entity;
			}
			set
			{
				Jardines previousValue = this._Jardines.Entity;
				if (((previousValue != value) 
							|| (this._Jardines.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jardines.Entity = null;
						previousValue.madresComuniarias.Remove(this);
					}
					this._Jardines.Entity = value;
					if ((value != null))
					{
						value.madresComuniarias.Add(this);
						this._id_jardin = value.id_jardin;
					}
					else
					{
						this._id_jardin = default(int);
					}
					this.SendPropertyChanged("Jardines");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registroAsistencia(registroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.madresComuniarias = this;
		}
		
		private void detach_registroAsistencia(registroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.madresComuniarias = null;
		}
		
		private void attach_registroAvance(registroAvance entity)
		{
			this.SendPropertyChanging();
			entity.madresComuniarias = this;
		}
		
		private void detach_registroAvance(registroAvance entity)
		{
			this.SendPropertyChanging();
			entity.madresComuniarias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.niños")]
	public partial class niños : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _registro_nuip;
		
		private string _nombre;
		
		private System.DateTime _fecha_nacimiento;
		
		private int _id_tipo_sangre;
		
		private string _ciudad_nacimiento;
		
		private int _id_acudiente;
		
		private int _telefono;
		
		private string _direccion;
		
		private int _id_eps;
		
		private int _id_jardin;
		
		private EntityRef<EPS> _EPS;
		
		private EntityRef<Jardines> _Jardines;
		
		private EntityRef<usuarios> _usuarios;
		
		private EntityRef<registroAsistencia> _registroAsistencia;
		
		private EntityRef<registroAvance> _registroAvance;
		
		private EntityRef<tipoSangre> _tipoSangre;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onregistro_nuipChanging(int value);
    partial void Onregistro_nuipChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Onfecha_nacimientoChanging(System.DateTime value);
    partial void Onfecha_nacimientoChanged();
    partial void Onid_tipo_sangreChanging(int value);
    partial void Onid_tipo_sangreChanged();
    partial void Onciudad_nacimientoChanging(string value);
    partial void Onciudad_nacimientoChanged();
    partial void Onid_acudienteChanging(int value);
    partial void Onid_acudienteChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void Onid_epsChanging(int value);
    partial void Onid_epsChanged();
    partial void Onid_jardinChanging(int value);
    partial void Onid_jardinChanged();
    #endregion
		
		public niños()
		{
			this._EPS = default(EntityRef<EPS>);
			this._Jardines = default(EntityRef<Jardines>);
			this._usuarios = default(EntityRef<usuarios>);
			this._registroAsistencia = default(EntityRef<registroAsistencia>);
			this._registroAvance = default(EntityRef<registroAvance>);
			this._tipoSangre = default(EntityRef<tipoSangre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registro_nuip", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int registro_nuip
		{
			get
			{
				return this._registro_nuip;
			}
			set
			{
				if ((this._registro_nuip != value))
				{
					if ((this._registroAsistencia.HasLoadedOrAssignedValue || this._registroAvance.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onregistro_nuipChanging(value);
					this.SendPropertyChanging();
					this._registro_nuip = value;
					this.SendPropertyChanged("registro_nuip");
					this.Onregistro_nuipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_nacimiento", DbType="Date NOT NULL")]
		public System.DateTime fecha_nacimiento
		{
			get
			{
				return this._fecha_nacimiento;
			}
			set
			{
				if ((this._fecha_nacimiento != value))
				{
					this.Onfecha_nacimientoChanging(value);
					this.SendPropertyChanging();
					this._fecha_nacimiento = value;
					this.SendPropertyChanged("fecha_nacimiento");
					this.Onfecha_nacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo_sangre", DbType="Int NOT NULL")]
		public int id_tipo_sangre
		{
			get
			{
				return this._id_tipo_sangre;
			}
			set
			{
				if ((this._id_tipo_sangre != value))
				{
					if (this._tipoSangre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipo_sangreChanging(value);
					this.SendPropertyChanging();
					this._id_tipo_sangre = value;
					this.SendPropertyChanged("id_tipo_sangre");
					this.Onid_tipo_sangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudad_nacimiento", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ciudad_nacimiento
		{
			get
			{
				return this._ciudad_nacimiento;
			}
			set
			{
				if ((this._ciudad_nacimiento != value))
				{
					this.Onciudad_nacimientoChanging(value);
					this.SendPropertyChanging();
					this._ciudad_nacimiento = value;
					this.SendPropertyChanged("ciudad_nacimiento");
					this.Onciudad_nacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_acudiente", DbType="Int NOT NULL")]
		public int id_acudiente
		{
			get
			{
				return this._id_acudiente;
			}
			set
			{
				if ((this._id_acudiente != value))
				{
					if (this._usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_acudienteChanging(value);
					this.SendPropertyChanging();
					this._id_acudiente = value;
					this.SendPropertyChanged("id_acudiente");
					this.Onid_acudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_eps", DbType="Int NOT NULL")]
		public int id_eps
		{
			get
			{
				return this._id_eps;
			}
			set
			{
				if ((this._id_eps != value))
				{
					if (this._EPS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_epsChanging(value);
					this.SendPropertyChanging();
					this._id_eps = value;
					this.SendPropertyChanged("id_eps");
					this.Onid_epsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jardin", DbType="Int NOT NULL")]
		public int id_jardin
		{
			get
			{
				return this._id_jardin;
			}
			set
			{
				if ((this._id_jardin != value))
				{
					if (this._Jardines.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_jardinChanging(value);
					this.SendPropertyChanging();
					this._id_jardin = value;
					this.SendPropertyChanged("id_jardin");
					this.Onid_jardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPS_niños", Storage="_EPS", ThisKey="id_eps", OtherKey="id_eps", IsForeignKey=true)]
		public EPS EPS
		{
			get
			{
				return this._EPS.Entity;
			}
			set
			{
				EPS previousValue = this._EPS.Entity;
				if (((previousValue != value) 
							|| (this._EPS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPS.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._EPS.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._id_eps = value.id_eps;
					}
					else
					{
						this._id_eps = default(int);
					}
					this.SendPropertyChanged("EPS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardines_niños", Storage="_Jardines", ThisKey="id_jardin", OtherKey="id_jardin", IsForeignKey=true)]
		public Jardines Jardines
		{
			get
			{
				return this._Jardines.Entity;
			}
			set
			{
				Jardines previousValue = this._Jardines.Entity;
				if (((previousValue != value) 
							|| (this._Jardines.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jardines.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._Jardines.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._id_jardin = value.id_jardin;
					}
					else
					{
						this._id_jardin = default(int);
					}
					this.SendPropertyChanged("Jardines");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuarios_niños", Storage="_usuarios", ThisKey="id_acudiente", OtherKey="id_usuario", IsForeignKey=true)]
		public usuarios usuarios
		{
			get
			{
				return this._usuarios.Entity;
			}
			set
			{
				usuarios previousValue = this._usuarios.Entity;
				if (((previousValue != value) 
							|| (this._usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuarios.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._usuarios.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._id_acudiente = value.id_usuario;
					}
					else
					{
						this._id_acudiente = default(int);
					}
					this.SendPropertyChanged("usuarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registroAsistencia_niños", Storage="_registroAsistencia", ThisKey="registro_nuip", OtherKey="id_niño", IsForeignKey=true)]
		public registroAsistencia registroAsistencia
		{
			get
			{
				return this._registroAsistencia.Entity;
			}
			set
			{
				registroAsistencia previousValue = this._registroAsistencia.Entity;
				if (((previousValue != value) 
							|| (this._registroAsistencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registroAsistencia.Entity = null;
						previousValue.niños = null;
					}
					this._registroAsistencia.Entity = value;
					if ((value != null))
					{
						value.niños = this;
						this._registro_nuip = value.id_niño;
					}
					else
					{
						this._registro_nuip = default(int);
					}
					this.SendPropertyChanged("registroAsistencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registroAvance_niños", Storage="_registroAvance", ThisKey="registro_nuip", OtherKey="id_niño", IsForeignKey=true)]
		public registroAvance registroAvance
		{
			get
			{
				return this._registroAvance.Entity;
			}
			set
			{
				registroAvance previousValue = this._registroAvance.Entity;
				if (((previousValue != value) 
							|| (this._registroAvance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registroAvance.Entity = null;
						previousValue.niños = null;
					}
					this._registroAvance.Entity = value;
					if ((value != null))
					{
						value.niños = this;
						this._registro_nuip = value.id_niño;
					}
					else
					{
						this._registro_nuip = default(int);
					}
					this.SendPropertyChanged("registroAvance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoSangre_niños", Storage="_tipoSangre", ThisKey="id_tipo_sangre", OtherKey="id_tipo_sangre", IsForeignKey=true)]
		public tipoSangre tipoSangre
		{
			get
			{
				return this._tipoSangre.Entity;
			}
			set
			{
				tipoSangre previousValue = this._tipoSangre.Entity;
				if (((previousValue != value) 
							|| (this._tipoSangre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipoSangre.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._tipoSangre.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._id_tipo_sangre = value.id_tipo_sangre;
					}
					else
					{
						this._id_tipo_sangre = default(int);
					}
					this.SendPropertyChanged("tipoSangre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registroAsistencia")]
	public partial class registroAsistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_niño;
		
		private System.DateTime _fecha;
		
		private int _id_descripcion;
		
		private int _id_madre;
		
		private EntityRef<niños> _niños;
		
		private EntityRef<descripcionNiño> _descripcionNiño;
		
		private EntityRef<madresComuniarias> _madresComuniarias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_niñoChanging(int value);
    partial void Onid_niñoChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void Onid_descripcionChanging(int value);
    partial void Onid_descripcionChanged();
    partial void Onid_madreChanging(int value);
    partial void Onid_madreChanged();
    #endregion
		
		public registroAsistencia()
		{
			this._niños = default(EntityRef<niños>);
			this._descripcionNiño = default(EntityRef<descripcionNiño>);
			this._madresComuniarias = default(EntityRef<madresComuniarias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_niño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_niño
		{
			get
			{
				return this._id_niño;
			}
			set
			{
				if ((this._id_niño != value))
				{
					this.Onid_niñoChanging(value);
					this.SendPropertyChanging();
					this._id_niño = value;
					this.SendPropertyChanged("id_niño");
					this.Onid_niñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_descripcion", DbType="Int NOT NULL")]
		public int id_descripcion
		{
			get
			{
				return this._id_descripcion;
			}
			set
			{
				if ((this._id_descripcion != value))
				{
					if (this._descripcionNiño.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_descripcionChanging(value);
					this.SendPropertyChanging();
					this._id_descripcion = value;
					this.SendPropertyChanged("id_descripcion");
					this.Onid_descripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_madre", DbType="Int NOT NULL")]
		public int id_madre
		{
			get
			{
				return this._id_madre;
			}
			set
			{
				if ((this._id_madre != value))
				{
					if (this._madresComuniarias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_madreChanging(value);
					this.SendPropertyChanging();
					this._id_madre = value;
					this.SendPropertyChanged("id_madre");
					this.Onid_madreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registroAsistencia_niños", Storage="_niños", ThisKey="id_niño", OtherKey="registro_nuip", IsUnique=true, IsForeignKey=false)]
		public niños niños
		{
			get
			{
				return this._niños.Entity;
			}
			set
			{
				niños previousValue = this._niños.Entity;
				if (((previousValue != value) 
							|| (this._niños.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._niños.Entity = null;
						previousValue.registroAsistencia = null;
					}
					this._niños.Entity = value;
					if ((value != null))
					{
						value.registroAsistencia = this;
					}
					this.SendPropertyChanged("niños");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="descripcionNiño_registroAsistencia", Storage="_descripcionNiño", ThisKey="id_descripcion", OtherKey="id_descripcion", IsForeignKey=true)]
		public descripcionNiño descripcionNiño
		{
			get
			{
				return this._descripcionNiño.Entity;
			}
			set
			{
				descripcionNiño previousValue = this._descripcionNiño.Entity;
				if (((previousValue != value) 
							|| (this._descripcionNiño.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._descripcionNiño.Entity = null;
						previousValue.registroAsistencia.Remove(this);
					}
					this._descripcionNiño.Entity = value;
					if ((value != null))
					{
						value.registroAsistencia.Add(this);
						this._id_descripcion = value.id_descripcion;
					}
					else
					{
						this._id_descripcion = default(int);
					}
					this.SendPropertyChanged("descripcionNiño");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="madresComuniarias_registroAsistencia", Storage="_madresComuniarias", ThisKey="id_madre", OtherKey="id_madre", IsForeignKey=true)]
		public madresComuniarias madresComuniarias
		{
			get
			{
				return this._madresComuniarias.Entity;
			}
			set
			{
				madresComuniarias previousValue = this._madresComuniarias.Entity;
				if (((previousValue != value) 
							|| (this._madresComuniarias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._madresComuniarias.Entity = null;
						previousValue.registroAsistencia.Remove(this);
					}
					this._madresComuniarias.Entity = value;
					if ((value != null))
					{
						value.registroAsistencia.Add(this);
						this._id_madre = value.id_madre;
					}
					else
					{
						this._id_madre = default(int);
					}
					this.SendPropertyChanged("madresComuniarias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registroAvance")]
	public partial class registroAvance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_niño;
		
		private string _año_escolar;
		
		private int _id_grado;
		
		private string _notas;
		
		private System.DateTime _fecha_entrega;
		
		private string _descripcion;
		
		private int _id_madre;
		
		private EntityRef<niños> _niños;
		
		private EntityRef<grados> _grados;
		
		private EntityRef<madresComuniarias> _madresComuniarias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_niñoChanging(int value);
    partial void Onid_niñoChanged();
    partial void Onaño_escolarChanging(string value);
    partial void Onaño_escolarChanged();
    partial void Onid_gradoChanging(int value);
    partial void Onid_gradoChanged();
    partial void OnnotasChanging(string value);
    partial void OnnotasChanged();
    partial void Onfecha_entregaChanging(System.DateTime value);
    partial void Onfecha_entregaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onid_madreChanging(int value);
    partial void Onid_madreChanged();
    #endregion
		
		public registroAvance()
		{
			this._niños = default(EntityRef<niños>);
			this._grados = default(EntityRef<grados>);
			this._madresComuniarias = default(EntityRef<madresComuniarias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_niño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_niño
		{
			get
			{
				return this._id_niño;
			}
			set
			{
				if ((this._id_niño != value))
				{
					this.Onid_niñoChanging(value);
					this.SendPropertyChanging();
					this._id_niño = value;
					this.SendPropertyChanged("id_niño");
					this.Onid_niñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_año_escolar", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string año_escolar
		{
			get
			{
				return this._año_escolar;
			}
			set
			{
				if ((this._año_escolar != value))
				{
					this.Onaño_escolarChanging(value);
					this.SendPropertyChanging();
					this._año_escolar = value;
					this.SendPropertyChanged("año_escolar");
					this.Onaño_escolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_grado", DbType="Int NOT NULL")]
		public int id_grado
		{
			get
			{
				return this._id_grado;
			}
			set
			{
				if ((this._id_grado != value))
				{
					if (this._grados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gradoChanging(value);
					this.SendPropertyChanging();
					this._id_grado = value;
					this.SendPropertyChanged("id_grado");
					this.Onid_gradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notas", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string notas
		{
			get
			{
				return this._notas;
			}
			set
			{
				if ((this._notas != value))
				{
					this.OnnotasChanging(value);
					this.SendPropertyChanging();
					this._notas = value;
					this.SendPropertyChanged("notas");
					this.OnnotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_entrega", DbType="Date NOT NULL")]
		public System.DateTime fecha_entrega
		{
			get
			{
				return this._fecha_entrega;
			}
			set
			{
				if ((this._fecha_entrega != value))
				{
					this.Onfecha_entregaChanging(value);
					this.SendPropertyChanging();
					this._fecha_entrega = value;
					this.SendPropertyChanged("fecha_entrega");
					this.Onfecha_entregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_madre", DbType="Int NOT NULL")]
		public int id_madre
		{
			get
			{
				return this._id_madre;
			}
			set
			{
				if ((this._id_madre != value))
				{
					if (this._madresComuniarias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_madreChanging(value);
					this.SendPropertyChanging();
					this._id_madre = value;
					this.SendPropertyChanged("id_madre");
					this.Onid_madreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registroAvance_niños", Storage="_niños", ThisKey="id_niño", OtherKey="registro_nuip", IsUnique=true, IsForeignKey=false)]
		public niños niños
		{
			get
			{
				return this._niños.Entity;
			}
			set
			{
				niños previousValue = this._niños.Entity;
				if (((previousValue != value) 
							|| (this._niños.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._niños.Entity = null;
						previousValue.registroAvance = null;
					}
					this._niños.Entity = value;
					if ((value != null))
					{
						value.registroAvance = this;
					}
					this.SendPropertyChanged("niños");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grados_registroAvance", Storage="_grados", ThisKey="id_grado", OtherKey="id_grado", IsForeignKey=true)]
		public grados grados
		{
			get
			{
				return this._grados.Entity;
			}
			set
			{
				grados previousValue = this._grados.Entity;
				if (((previousValue != value) 
							|| (this._grados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grados.Entity = null;
						previousValue.registroAvance.Remove(this);
					}
					this._grados.Entity = value;
					if ((value != null))
					{
						value.registroAvance.Add(this);
						this._id_grado = value.id_grado;
					}
					else
					{
						this._id_grado = default(int);
					}
					this.SendPropertyChanged("grados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="madresComuniarias_registroAvance", Storage="_madresComuniarias", ThisKey="id_madre", OtherKey="id_madre", IsForeignKey=true)]
		public madresComuniarias madresComuniarias
		{
			get
			{
				return this._madresComuniarias.Entity;
			}
			set
			{
				madresComuniarias previousValue = this._madresComuniarias.Entity;
				if (((previousValue != value) 
							|| (this._madresComuniarias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._madresComuniarias.Entity = null;
						previousValue.registroAvance.Remove(this);
					}
					this._madresComuniarias.Entity = value;
					if ((value != null))
					{
						value.registroAvance.Add(this);
						this._id_madre = value.id_madre;
					}
					else
					{
						this._id_madre = default(int);
					}
					this.SendPropertyChanged("madresComuniarias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rol")]
	public partial class rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol;
		
		private string _rol1;
		
		private EntitySet<usuarios> _usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void Onrol1Changing(string value);
    partial void Onrol1Changed();
    #endregion
		
		public rol()
		{
			this._usuarios = new EntitySet<usuarios>(new Action<usuarios>(this.attach_usuarios), new Action<usuarios>(this.detach_usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rol", Storage="_rol1", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string rol1
		{
			get
			{
				return this._rol1;
			}
			set
			{
				if ((this._rol1 != value))
				{
					this.Onrol1Changing(value);
					this.SendPropertyChanging();
					this._rol1 = value;
					this.SendPropertyChanged("rol1");
					this.Onrol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rol_usuarios", Storage="_usuarios", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<usuarios> usuarios
		{
			get
			{
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.rol = this;
		}
		
		private void detach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipoSangre")]
	public partial class tipoSangre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tipo_sangre;
		
		private string _tipo_sangre;
		
		private EntitySet<niños> _niños;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipo_sangreChanging(int value);
    partial void Onid_tipo_sangreChanged();
    partial void Ontipo_sangreChanging(string value);
    partial void Ontipo_sangreChanged();
    #endregion
		
		public tipoSangre()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo_sangre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_tipo_sangre
		{
			get
			{
				return this._id_tipo_sangre;
			}
			set
			{
				if ((this._id_tipo_sangre != value))
				{
					this.Onid_tipo_sangreChanging(value);
					this.SendPropertyChanging();
					this._id_tipo_sangre = value;
					this.SendPropertyChanged("id_tipo_sangre");
					this.Onid_tipo_sangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_sangre", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string tipo_sangre
		{
			get
			{
				return this._tipo_sangre;
			}
			set
			{
				if ((this._tipo_sangre != value))
				{
					this.Ontipo_sangreChanging(value);
					this.SendPropertyChanging();
					this._tipo_sangre = value;
					this.SendPropertyChanged("tipo_sangre");
					this.Ontipo_sangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoSangre_niños", Storage="_niños", ThisKey="id_tipo_sangre", OtherKey="id_tipo_sangre")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.tipoSangre = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.tipoSangre = null;
		}
	}
}
#pragma warning restore 1591
